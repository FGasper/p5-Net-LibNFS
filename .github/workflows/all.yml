on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

env:
   PERL_USE_UNSAFE_INC: 0
   AUTHOR_TESTING: 1
   AUTOMATED_TESTING: 1
   RELEASE_TESTING: 1
   PERL_CARTON_PATH: $GITHUB_WORKSPACE/local

jobs:
  linux-static:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.36'
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
          - '5.26'
          - '5.24'
          - '5.22'
          - '5.20'
          - '5.18'
          - '5.16'
          - '5.14'
          - '5.12'
          - '5.10'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop --with-recommends --verbose .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  linux-upstream-libnfs:
    runs-on: ubuntu-latest

    container:
      image: perldocker/perl-tester

    steps:
      - run: apt install -y cmake
      - name: Build & install libnfs
        run: |
            mkdir libnfs-upstream
            chdir libnfs-upstream
            git clone https://github.com/sahlberg/libnfs
            cd libnfs
            cmake .
            make install
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-recommends --with-develop --verbose .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  # NB: As of Ubuntu 20 it’s not a recent enough version.
  # So we get to test the shared-but-too-old check.
  linux-apt-libnfs:
    runs-on: ubuntu-latest

    container:
      image: perldocker/perl-tester

    steps:
      - run: apt install -y libnfs-dev
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop --with-recommends --verbose .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  qemu:
    runs-on: ubuntu-latest

    name: QEMU (${{ matrix.platform }})

    strategy:
      fail-fast: false
      matrix:
        platform:
          # - i386  # cf. https://github.com/sahlberg/libnfs/issues/393
          - s390x
          - arm32v7
          - arm64v8

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: Get the qemu container
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Run tests on ${{ matrix.platform }}
        run: docker run --rm --interactive --mount type=bind,source=$(pwd),target=/host ${{ matrix.platform }}/ubuntu bash -c "apt update; apt install -y cpanminus cmake make git gcc; perl -V; cd /host; cpanm --verbose --notest --installdeps --with-develop --with-configure . && perl Makefile.PL && make && prove -wlvmb t"

  mac-static:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: Set up Perl
        run: brew install perl cpanminus
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-develop --with-recommends --with-configure --verbose .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - run: prove -wlvmb t

  mac-dynamic:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: Set up Perl & libnfs
        run: brew install perl libnfs cpanminus
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-develop --with-configure --with-recommends --verbose .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - run: prove -wlvmb t

#      - name: Run tests (with coverage)
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          curl -L https://cpanmin.us | perl - --notest Devel::Cover::Report::Coveralls
#          `perl -MConfig -E'print $Config::Config{"sitebin"}'`/cover -test -report Coveralls -ignore_re easyxs
#
  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: Set up Perl
        run: |
          choco install strawberryperl
          #echo "##[add-path]C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
          echo 'C:\strawberry\c\bin' >> $GITHUB_PATH
          echo 'C:\strawberry\perl\site\bin' >> $GITHUB_PATH
          echo 'C:\strawberry\perl\bin' >> $GITHUB_PATH
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: curl -L https://cpanmin.us | perl - --notest --installdeps --with-develop --with-configure --verbose .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make

      # This hangs … :(
      # - name: Run Tests
      #   run: prove -wlvmb t

  BSDs:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        os:
          - name: freebsd
            version: '13.0'
            pkginstall: pkg install -y git cmake libnfs p5-ExtUtils-MakeMaker p5-ExtUtils-PkgConfig
        # Breaking due to some weird linker error ...
        #  - name: freebsd
        #    version: '12.2'
        #    pkginstall: pkg install -y git cmake p5-ExtUtils-MakeMaker
          - name: openbsd
            version: '6.9'
            pkginstall: pkg_add git cmake libnfs p5-ExtUtils-PkgConfig p5-ExtUtils-MakeMaker

    steps:
      - uses: actions/checkout@main
        with:
          submodules: recursive

      - name: Test on ${{ matrix.os.name }}
        uses: cross-platform-actions/action@v0.3.1
        #uses: cross-platform-actions/action@master
        with:
          operating_system: ${{ matrix.os.name }}
          version: ${{ matrix.os.version }}
          shell: bash
          run: |
            sudo ${{ matrix.os.pkginstall }}
            curl -L https://cpanmin.us | sudo perl - --verbose --notest --installdeps --with-configure --with-develop --with-recommends .
            perl Makefile.PL
            make
            prove -wlvmb t


  cygwin-static:
    runs-on: windows-latest

    steps:
      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
            platform: x64
            packages: perl_base perl-ExtUtils-MakeMaker make gcc-g++ libcrypt-devel libnsl-devel bash cmake
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - run: perl -V
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - run: cpan App::cpanminus
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: Install Dependencies
        run: cd $GITHUB_WORKSPACE; cpanm --verbose --notest --installdeps --with-configure --with-develop --with-recommends .
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: perl Makefile.PL
        run: cd $GITHUB_WORKSPACE; perl Makefile.PL
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make
        run: cd $GITHUB_WORKSPACE; make
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make test
        run: cd $GITHUB_WORKSPACE; prove -wlvmb t
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'

  cygwin-dynamic:
    runs-on: windows-latest

    steps:
      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
            platform: x64
            packages: perl_base perl-ExtUtils-MakeMaker make gcc-g++ libcrypt-devel libnsl-devel bash libnfs cmake pkgconf
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - run: perl -V
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - run: cpan App::cpanminus
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: Install Dependencies
        run: cd $GITHUB_WORKSPACE; cpanm --verbose --notest --installdeps --with-configure --with-develop --with-recommends .
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: perl Makefile.PL
        run: cd $GITHUB_WORKSPACE; perl Makefile.PL
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make
        run: cd $GITHUB_WORKSPACE; make
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make test
        run: cd $GITHUB_WORKSPACE; prove -wlvmb t
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
